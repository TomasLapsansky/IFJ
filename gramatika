/**
* @Name IFJ17 Syntakticka a sematicka analyza - gramatika
* @author Tomas Lapsansky (xlapsa00)
* @file gramatika
* @date 15.11.2017
*/

<p_start>		<p_declare> <p_scope>
<p_scope>		Scope <p_body> End Scope EOF
<p_declare>		ε
<p_declare>		Declare Function ID (<p_declareparameter> As <p_type> EOL <p_declare>
<p_declare>		Function ID (<p_parameter> As <p_type> EOL <p_body> End Function <p_declare>
<p_body>		ε
<p_body>		<p_prikaz> EOL <p_body>

<p_type>		Integer
<p_type>		Double
<p_type>		String

<p_parameter>		ε)
<p_parameter>		ID As <p_type>)
<p_parameter>		ID As <p_type>, <p_nextparameter>

<p_nextparameter>	ID As <p_type>)
<p_nextparameter>	ID As <p_type>, <p_nextparameter>

<p_declareparameter>	ε)
<p_declareparameter>	ID As <p_type>)
<p_declareparameter>	ID As <p_type>, <p_decnextparameter>

<p_decnextparameter>	ID As <p_type>)
<p_decnextparameter>	ID As <p_type>, <p_decnextparameter>

<p_vparameter>		ε)
<p_vparameter>		ID)
<p_vparameter>		ID, <p_vnextparameter>

<p_vnextparameter>	ID)
<p_vnextparameter>	ID, <p_vnextparameter>

<p_prikaz>		ε
<p_prikaz>		Dim ID As <p_type>
<p_prikaz>		ID = <p_priradenie>
<p_prikaz>		Input ID
<p_prikaz>		Print <p_print>
<p_prikaz>		If <p_vyraz> Then EOL <p_body> Else EOL <p_body> End If
<p_prikaz>		Do While <p_vyraz> EOL <p_body> Loop
<p_prikaz>		Return <p_vyraz>

<p_priradenie>		F_ID(<p_vparameter>
<p_priradenie>		<p_vyraz>

<p_print>		String <p_nextprint>
<p_print>		<p_vyraz> <p_nextprint>

<p_nextprint>		ε
<p_nextprint>		; String <p_nextprint>
<p_nextprint>		; <p_vyraz> <p_nextprint>


<p_vyraz> 		TODO
